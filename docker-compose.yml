version: '3.8'

services:
  # Redis for message broker
  redis:
    image: redis:7-alpine
    container_name: hexago-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hexago-network

  # MySQL for data storage
  mysql:
    image: mysql:8.0
    container_name: hexago-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hexago
      MYSQL_USER: hexago
      MYSQL_PASSWORD: hexagopassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hexago-network

  # All-in-one service (runs all services in one container)
  all-in-one:
    build:
      context: .
      dockerfile: docker/all-in-one.Dockerfile
    container_name: hexago-all-in-one
    ports:
      - "8080:8080"
      - "9090:9090"
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - REDIS_URL=redis:6379
      - MYSQL_DSN=hexago:hexagopassword@tcp(mysql:3306)/hexago?charset=utf8mb4&parseTime=True&loc=Local
      - SYMBOLS=BTCUSDT,ETHUSDT,ADAUSDT
    networks:
      - hexago-network
    restart: unless-stopped

  # Individual services (alternative to all-in-one)
  backoffice-api:
    build:
      context: .
      dockerfile: docker/backoffice-api.Dockerfile
    container_name: hexago-backoffice-api
    ports:
      - "9091:9090"
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - REDIS_URL=redis:6379
      - SYMBOLS=BTCUSDT,ETHUSDT,ADAUSDT
    networks:
      - hexago-network
    restart: unless-stopped
    profiles:
      - microservices

  binance-tick-consumer:
    build:
      context: .
      dockerfile: docker/binance-tick-consumer.Dockerfile
    container_name: hexago-binance-tick-consumer
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis:6379
      - SYMBOLS=BTCUSDT,ETHUSDT,ADAUSDT
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY:-}
    networks:
      - hexago-network
    restart: unless-stopped
    profiles:
      - microservices

  ohlc-generator:
    build:
      context: .
      dockerfile: docker/ohlc-generator.Dockerfile
    container_name: hexago-ohlc-generator
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - REDIS_URL=redis:6379
      - MYSQL_DSN=hexago:hexagopassword@tcp(mysql:3306)/hexago?charset=utf8mb4&parseTime=True&loc=Local
      - SYMBOLS=BTCUSDT,ETHUSDT,ADAUSDT
    networks:
      - hexago-network
    restart: unless-stopped
    profiles:
      - microservices

volumes:
  redis_data:
  mysql_data:

networks:
  hexago-network:
    driver: bridge
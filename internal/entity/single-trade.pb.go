// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.5
// source: single-trade.proto

package entity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SingleTrade_Direction int32

const (
	SingleTrade_B SingleTrade_Direction = 0
	SingleTrade_S SingleTrade_Direction = 1
)

// Enum value maps for SingleTrade_Direction.
var (
	SingleTrade_Direction_name = map[int32]string{
		0: "B",
		1: "S",
	}
	SingleTrade_Direction_value = map[string]int32{
		"B": 0,
		"S": 1,
	}
)

func (x SingleTrade_Direction) Enum() *SingleTrade_Direction {
	p := new(SingleTrade_Direction)
	*p = x
	return p
}

func (x SingleTrade_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SingleTrade_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_single_trade_proto_enumTypes[0].Descriptor()
}

func (SingleTrade_Direction) Type() protoreflect.EnumType {
	return &file_single_trade_proto_enumTypes[0]
}

func (x SingleTrade_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SingleTrade_Direction.Descriptor instead.
func (SingleTrade_Direction) EnumDescriptor() ([]byte, []int) {
	return file_single_trade_proto_rawDescGZIP(), []int{0, 0}
}

type SingleTrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction      SingleTrade_Direction `protobuf:"varint,1,opt,name=direction,proto3,enum=entity.SingleTrade_Direction" json:"direction,omitempty"`
	Timestamp      int64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	InstrumentName string                `protobuf:"bytes,3,opt,name=instrument_name,json=instrumentName,proto3" json:"instrument_name,omitempty"`
	Price          float64               `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Amount         int64                 `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency1      string                `protobuf:"bytes,6,opt,name=currency1,proto3" json:"currency1,omitempty"`
	Currency2      string                `protobuf:"bytes,7,opt,name=currency2,proto3" json:"currency2,omitempty"`
}

func (x *SingleTrade) Reset() {
	*x = SingleTrade{}
	mi := &file_single_trade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleTrade) ProtoMessage() {}

func (x *SingleTrade) ProtoReflect() protoreflect.Message {
	mi := &file_single_trade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleTrade.ProtoReflect.Descriptor instead.
func (*SingleTrade) Descriptor() ([]byte, []int) {
	return file_single_trade_proto_rawDescGZIP(), []int{0}
}

func (x *SingleTrade) GetDirection() SingleTrade_Direction {
	if x != nil {
		return x.Direction
	}
	return SingleTrade_B
}

func (x *SingleTrade) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SingleTrade) GetInstrumentName() string {
	if x != nil {
		return x.InstrumentName
	}
	return ""
}

func (x *SingleTrade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SingleTrade) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SingleTrade) GetCurrency1() string {
	if x != nil {
		return x.Currency1
	}
	return ""
}

func (x *SingleTrade) GetCurrency2() string {
	if x != nil {
		return x.Currency2
	}
	return ""
}

var File_single_trade_proto protoreflect.FileDescriptor

var file_single_trade_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x96, 0x02, 0x0a,
	0x0b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x31, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x32, 0x22, 0x19, 0x0a, 0x09, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x00, 0x12, 0x05,
	0x0a, 0x01, 0x53, 0x10, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_single_trade_proto_rawDescOnce sync.Once
	file_single_trade_proto_rawDescData = file_single_trade_proto_rawDesc
)

func file_single_trade_proto_rawDescGZIP() []byte {
	file_single_trade_proto_rawDescOnce.Do(func() {
		file_single_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_single_trade_proto_rawDescData)
	})
	return file_single_trade_proto_rawDescData
}

var file_single_trade_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_single_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_single_trade_proto_goTypes = []any{
	(SingleTrade_Direction)(0), // 0: entity.SingleTrade.Direction
	(*SingleTrade)(nil),        // 1: entity.SingleTrade
}
var file_single_trade_proto_depIdxs = []int32{
	0, // 0: entity.SingleTrade.direction:type_name -> entity.SingleTrade.Direction
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_single_trade_proto_init() }
func file_single_trade_proto_init() {
	if File_single_trade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_single_trade_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_single_trade_proto_goTypes,
		DependencyIndexes: file_single_trade_proto_depIdxs,
		EnumInfos:         file_single_trade_proto_enumTypes,
		MessageInfos:      file_single_trade_proto_msgTypes,
	}.Build()
	File_single_trade_proto = out.File
	file_single_trade_proto_rawDesc = nil
	file_single_trade_proto_goTypes = nil
	file_single_trade_proto_depIdxs = nil
}

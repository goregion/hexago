# GitHub Actions workflow for unit tests only
name: Unit Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'internal/**'
      - 'tests/unit/**'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/unit-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'internal/**'
      - 'tests/unit/**'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/unit-tests.yml'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run unit tests
      run: go test -v -race ./tests/unit/... -timeout 30s
    
    - name: Run unit tests with coverage
      run: go test -v -race -coverprofile=unit-coverage.out ./tests/unit/... -timeout 30s
    
    - name: Check test coverage
      run: |
        go tool cover -html=unit-coverage.out -o unit-coverage.html
        go tool cover -func=unit-coverage.out | grep total | awk '{print "Total coverage: " $3}'
    
    - name: Upload unit test coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./unit-coverage.out
        flags: unit
        name: codecov-unit
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: unit-coverage-report-go${{ matrix.go-version }}
        path: unit-coverage.html

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m ./internal/... ./tests/unit/...